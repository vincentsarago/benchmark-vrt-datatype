FROM lambci/lambda:build-python3.6

ENV \
  LANG=en_US.UTF-8 \
  LC_ALL=en_US.UTF-8

RUN yum makecache fast
RUN yum install -y automake16 libpng-devel nasm

ENV PREFIX /var/task

# versions of packages
ENV \
  PKGCONFIG_VERSION=0.29.2 \
  PROJ_VERSION=5.2.0 \
  GEOS_VERSION=3.7.1 \
  LIBPNG_VERSION=1.6.36 \
  OPENJPEG_VERSION=2.3.0 \
  LIBJPEG_TURBO_VERSION=2.0.1 \
  WEBP_VERSION=1.0.1 \
  ZSTD_VERSION=1.3.8 \
  CURL_VERSION=7.59.0 \
  NGHTTP2_VERSION=1.35.1 \
  GDAL_VERSION=2.4.0

# nghttp2
RUN mkdir /tmp/nghttp2 \
  && curl -sfL https://github.com/nghttp2/nghttp2/releases/download/v${NGHTTP2_VERSION}/nghttp2-${NGHTTP2_VERSION}.tar.gz | tar zxf - -C /tmp/nghttp2 --strip-components=1 \
  && cd /tmp/nghttp2 \
  && ./configure --enable-lib-only --prefix=$PREFIX \
  && make -j $(nproc) --silent && make install && make clean \
  && rm -rf /tmp/nghttp2

# libcurl
RUN mkdir /tmp/libcurl \
  && curl -sfL https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz | tar zxf - -C /tmp/libcurl --strip-components=1 \
  && cd /tmp/libcurl \
  && ./configure --disable-manual --disable-cookies --with-nghttp2=$PREFIX --prefix=$PREFIX \
  && make -j $(nproc) --silent && make install && make clean \
  && rm -rf /tmp/libcurl

# pkg-config
RUN mkdir /tmp/pkg-config \
   && curl -sfL https://pkg-config.freedesktop.org/releases/pkg-config-$PKGCONFIG_VERSION.tar.gz | tar zxf - -C /tmp/pkg-config --strip-components=1 \
   && cd /tmp/pkg-config \
   && CFLAGS="-O2 -Wl,-S" ./configure --prefix=$PREFIX \
   && make -j $(nproc) --silent && make install && make clean \
   && rm -rf /tmp/pkg-config

# proj
RUN mkdir /tmp/proj \
   && curl -sfL http://download.osgeo.org/proj/proj-$PROJ_VERSION.tar.gz | tar zxf - -C /tmp/proj --strip-components=1 \
   && cd /tmp/proj \
   && ./configure --prefix=$PREFIX \
   && make && make install && make clean \
   && rm -rf /tmp/proj

# geos
RUN mkdir /tmp/geos \
  && curl -sfL http://download.osgeo.org/geos/geos-$GEOS_VERSION.tar.bz2 | tar jxf - -C /tmp/geos --strip-components=1 \
  && cd /tmp/geos \
  && CFLAGS="-O2 -Wl,-S" CXXFLAGS="-O2 -Wl,-S" ./configure --prefix=$PREFIX \
  && make -j $(nproc) --silent && make install && make clean \
  && rm -rf /tmp/geos

# png
RUN mkdir /tmp/png \
  && curl -sfL http://prdownloads.sourceforge.net/libpng/libpng-$LIBPNG_VERSION.tar.gz | tar zxf - -C /tmp/png --strip-components=1 \
  && cd /tmp/png \
  && CFLAGS="-O2 -Wl,-S" CXXFLAGS="-O2 -Wl,-S" ./configure --prefix=$PREFIX \
  && make -j $(nproc) --silent && make install && make clean \
  && rm -rf /tmp/png

# openjpeg
RUN mkdir /tmp/openjpeg \
  && curl -sfL https://github.com/uclouvain/openjpeg/archive/v$OPENJPEG_VERSION.tar.gz | tar zxf - -C /tmp/openjpeg --strip-components=1 \
  && cd /tmp/openjpeg \
  && mkdir build && cd build \
  && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PREFIX \
  && make -j $(nproc) install && make clean \
  && rm -rf /tmp/openjpeg

# jpeg_turbo
RUN mkdir /tmp/jpeg \
  && curl -sfL https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${LIBJPEG_TURBO_VERSION}.tar.gz | tar zxf - -C /tmp/jpeg --strip-components=1 \
  && cd /tmp/jpeg \
  && cmake -G"Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$PREFIX . \
  && make -j $(nproc) install && make clean \
  && rm -rf /tmp/jpeg

# webp
RUN mkdir /tmp/webp \
    && curl -sfL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | tar zxf - -C /tmp/webp --strip-components=1 \
    && cd /tmp/webp \
    && CFLAGS="-O2 -Wl,-S" ./configure --prefix=$PREFIX \
    && make -j $(nproc) --silent && make install && make clean \
    && rm -rf /tmp/webp

# zstd
RUN mkdir /tmp/zstd \
  && curl -sfL https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz | tar zxf - -C /tmp/zstd --strip-components=1 \
  && cd /tmp/zstd \
  && make -j $(nproc) PREFIX=$PREFIX ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 --silent && make install PREFIX=$PREFIX ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 && make clean \
  && rm -rf /tmp/zstd

ENV PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig/

# gdal
RUN mkdir /tmp/gdal \
  && curl -sfL https://github.com/vincentsarago/gdal/archive/rescale_alpha_band240.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2
#  && curl -sfL https://github.com/OSGeo/gdal/archive/v${GDAL_VERSION}.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2

RUN cd /tmp/gdal \
  && touch config.rpath \
  && LDFLAGS="-Wl,-rpath,$PREFIX/lib -Wl,-rpath,$PREFIX/lib64 -Wl,-z,origin" CFLAGS="-O2 -Wl,-S" CXXFLAGS="-O2 -Wl,-S" ./configure \
      --prefix=$PREFIX \
      --with-proj=$PREFIX \
      --with-geos=$PREFIX/bin/geos-config \
      --with-curl=$PREFIX/bin/curl-config \
      --with-openjpeg \
      --with-png \
      --with-jpeg=$PREFIX \
      --with-webp=$PREFIX \
      --with-zstd=$PREFIX \
      --with-crypto \
      --with-libtiff=internal \
      --with-threads \
      --disable-debug \
      --with-hide-internal-symbols=yes \
      --without-bsb \
      --without-cfitsio \
      --without-ecw \
      --without-expat \
      --without-fme \
      --without-freexl \
      --without-gif \
      --without-gif \
      --without-gnm \
      --without-grass \
      --without-grib \
      --without-hdf4 \
      --without-hdf5 \
      --without-idb \
      --without-ingres \
      --without-jasper \
      --without-jp2mrsid \
      --without-kakadu \
      --without-libgrass \
      --without-libkml \
      --without-libtool \
      --without-mrf \
      --without-mrsid \
      --without-mysql \
      --without-netcdf \
      --without-odbc \
      --without-ogdi \
      --without-pcidsk \
      --without-pcraster \
      --without-pcre \
      --without-perl \
      --without-pg \
      --without-python \
      --without-qhull \
      --without-sde \
      --without-sqlite3 \
      --without-xerces \
      --without-xml2

RUN cd /tmp/gdal \
  && make -j $(nproc) --silent && make install && make clean \
  && rm -rf /tmp/gdal

RUN yum clean all

ENV \
  GDAL_DATA=$PREFIX/share/gdal \
  PROJ_LIB=$PREFIX/share/proj \
  GDAL_CONFIG=$PREFIX/bin/gdal-config \
  GEOS_CONFIG=$PREFIX/bin/geos-config \
  GDAL_VERSION=2.5.0

ENV PATH=$PREFIX/bin:$PATH

RUN pip3 install pip -U
RUN pip3 install cython numpy --no-binary numpy

################################################################################
RUN pip3 install cython numpy --no-binary numpy

RUN pip3 install rasterio --no-binary rasterio
RUN pip3 install rio-cogeo

RUN yum install -y jq wget

RUN mkdir /prod
RUN mkdir /cog
RUN mkdir /raw

# Get RAW data
RUN cd /raw \
  && wget https://s3-us-west-2.amazonaws.com/remotepixel-pub/ARD/LC08_CU_028004_20171002_20171018_C01_V01_SRB2.tif \
  && wget https://s3-us-west-2.amazonaws.com/remotepixel-pub/ARD/LC08_CU_028004_20171002_20171018_C01_V01_SRB3.tif \
  && wget https://s3-us-west-2.amazonaws.com/remotepixel-pub/ARD/LC08_CU_028004_20171002_20171018_C01_V01_SRB4.tif

# Create products
RUN rio stack /raw/LC08_CU_028004_20171002_20171018_C01_V01_SRB4.tif /raw/LC08_CU_028004_20171002_20171018_C01_V01_SRB3.tif /raw/LC08_CU_028004_20171002_20171018_C01_V01_SRB2.tif -o /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif --overwrite
RUN gdal_translate -ot Byte -scale -2000 16000 1 255 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Byte.tif
RUN gdal_translate -ot Int32 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int32.tif
RUN gdal_translate -ot UInt16 -scale -2000 16000 1 18000 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint16.tif
RUN gdal_translate -ot UInt32 -scale -2000 16000 1 18000 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint32.tif
RUN gdal_translate -ot Float32 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float32.tif
RUN gdal_translate -ot Float64 -a_nodata -9999 /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float64.tif
RUN rm -rf /raw

# Create Cogs
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /cog/3B_Int16_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int16.tif /cog/1B_Int16_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Byte.tif /cog/3B_Byte_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Byte.tif /cog/1B_Byte_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint16.tif /cog/3B_Uint16_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint16.tif /cog/1B_Uint16_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint32.tif /cog/3B_Uint32_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Uint32.tif /cog/1B_Uint32_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int32.tif /cog/3B_Int32_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Int32.tif /cog/1B_Int32_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float32.tif /cog/3B_Float32_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float32.tif /cog/1B_Float32_cogeo.tif --cog-profile deflate --bidx 1
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float64.tif /cog/3B_Float64_cogeo.tif --cog-profile deflate
RUN rio cogeo /prod/LC08_CU_028004_20171002_20171018_C01_V01_RGB432_Float64.tif /cog/1B_Float64_cogeo.tif --cog-profile deflate --bidx 1
RUN rm -rf /prod
